name: Deploy Angular to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # Ajusta la versión según lo que requiera tu Angular CLI
          node-version: '20'

      # Instala dependencias en modo CI.
      - name: Install dependencies
        run: npm ci

      # Compila el proyecto Angular.
      - name: Build Angular project
        run: npx ng build --configuration production

      # **Método 1: Usar SCP**
      - name: Upload build artifacts via SCP
        uses: appleboy/scp-action@master  # Asegurar que está actualizado
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "dist/hola-mundo/browser/*"
          target: "${{ secrets.REMOTE_PATH }}"

      # **Si SCP falla, usar Rsync como alternativa**
      - name: Upload build artifacts via Rsync (Fallback)
        uses: appleboy/ssh-action@master
        if: failure()  # Solo ejecuta si SCP falla
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            rsync -avz dist/hola-mundo/browser/ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_PATH }}

      # Corre comandos remotos por SSH (ejemplo para Nginx).
      - name: Run remote commands to deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            sudo rm -rf /var/www/html/*
            sudo cp -r ${{ secrets.REMOTE_PATH }}/* /var/www/html/
            sudo systemctl restart nginx
